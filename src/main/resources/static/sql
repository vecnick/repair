CREATE TABLE Status
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL
);
CREATE TABLE Client
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    second_name varchar(100) NOT NULL,
    patronymic varchar(100),
    telephone_number varchar(100) NOT NULL
);
CREATE TABLE Provider
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    second_name varchar(100) NOT NULL,
    patronymic varchar(100),
    telephone_number varchar(100) NOT NULL
);
CREATE TABLE Branch
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    address varchar(100) NOT NULL,
    rating_indicator int
);
CREATE TABLE Post
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    duties varchar(100) NOT NULL,
    requirements varchar(100) NOT NULL
);
CREATE TABLE Employee
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    second_name varchar(100) NOT NULL,
    patronymic varchar(100),
    gender varchar(20),
    branch_id int REFERENCES branch(id) ON DELETE SET NULL,
    post_id int REFERENCES post(id) ON DELETE SET NULL
);
CREATE TABLE Order_execution_process
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    technique_name varchar(100) NOT NULL,
    total_price int,
    employee_id int REFERENCES employee(id) ON DELETE SET NULL,
    client_id int REFERENCES client(id) ON DELETE SET NULL
);
CREATE TABLE Repair_material
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    retail_price int,
    amount int,
    provider_id int REFERENCES provider(id) ON DELETE SET NULL
);
CREATE TABLE Service
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL,
    description varchar(100) NOT NULL,
    service_price int,
    material_id int REFERENCES repair_material(id) ON DELETE SET NULL
);
CREATE TABLE Service_to_Order
(
    order_id int REFERENCES order_execution_process(id),
    service_id int REFERENCES service(id),
    PRIMARY KEY (order_id,service_id)
);
CREATE TABLE Condition
(
    id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_description varchar(100) NOT NULL,
    start_date TIMESTAMP,
    end_date TIMESTAMP,
    order_id int REFERENCES order_execution_process(id) ON DELETE SET NULL,
    order_status int REFERENCES status(id) ON DELETE SET NULL
);